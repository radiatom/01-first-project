{"version":3,"file":"static/js/682.ef2257d7.chunk.js","mappings":"oNACA,EAAyB,uBAAzB,EAAyD,uBAAzD,EAA+F,6B,SCuB/F,EAnBe,SAACA,GACZ,OACI,iBAAKC,UAAWC,EAAS,WACrB,0BACI,gBAAKC,IAAKH,EAAMI,OAAQC,IAAI,QAGhC,0BACI,SAAC,KAAO,CAACC,GAAI,YAAcN,EAAMO,GAAIN,UAAW,SAAAO,GAAU,OAAIA,EAAWC,SAAWP,EAAWA,CAAc,EAAC,SACzGF,EAAMU,WAO3B,ECpBA,EAA2B,0BAA3B,EAA+D,yBCU/D,EATkB,SAACV,GACf,OACI,4BACI,gBAAKG,IAAKH,EAAMI,OAAQC,IAAI,KAC3BL,EAAMW,UAGnB,ECGA,EAVmB,SAACX,GAEhB,OACI,2BACKA,EAAMW,SACP,gBAAKR,IAAKH,EAAMI,OAAQC,IAAI,OAGxC,ECSA,EAbgB,SAACL,GAEb,OACI,gBAAKC,UAAU,YAAW,UACtB,gBAAKA,UAA0B,IAAfD,EAAMY,OAAWV,EAAUA,EAAW,SAClC,IAAfF,EAAMY,QAAW,SAAC,EAAS,CAACD,QAASX,EAAMW,QAAUP,OAAQJ,EAAMI,UAAU,SAAC,EAAU,CAACO,QAASX,EAAMW,QAASP,OAAQJ,EAAMI,YAMhJ,EChBA,EAA0B,yBAA1B,EAAmG,8BAAnG,EAA4I,0B,8BCKtIS,GAAYC,EAAAA,EAAAA,GAAU,IAgC5B,EA9BgB,SAACd,GAEb,OACI,iBAAKC,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BF,EAAMe,UAGX,iBAAKd,UAAWC,EAAW,UAEtBF,EAAMW,SACP,kBAAMK,SAAUhB,EAAMiB,aAAa,WAC/B,SAACC,EAAA,EAAK,CACFC,SAAU,CAACC,EAAAA,EAAUP,GACrBQ,YAAY,OAGZC,KAAM,GACNC,KAAM,EACNb,KAAM,cACNc,UAAWC,EAAAA,KAEf,4BAAQ,iBAM5B,E,oBC1BMC,GAAiBC,E,QAAAA,GAAU,CAAEC,KAAM,eAAlBD,CAAmCE,GAEpDC,GAA0BC,EAAAA,EAAAA,GAAiBL,GAE3CM,EAAmBC,EAAAA,MAAW,SAACjC,GAMjC,OACI,0BACI,SAAC8B,GAAyB,QAACd,SANlB,SAACkB,GACdlC,EAAMmC,eAAeD,EAASE,aAC9BpC,EAAMqC,aACV,GAG2DrC,KAG/D,IAYA,GAAesC,EAAAA,EAAAA,KAVS,SAACC,GACrB,MAAO,CACHxB,OAAQwB,EAAMC,YAAYC,WAAWC,KAAI,SAAAC,GACrC,OAAQ,SAAC,EAAM,CAACjC,KAAMiC,EAAGjC,KAAMH,GAAIoC,EAAGpC,GAAgBH,OAAQuC,EAAGvC,QAAlBuC,EAAGpC,GACtD,IACAI,QAAS4B,EAAMC,YAAYI,aAAaF,KAAI,SAAAC,GACxC,OAAQ,SAAC,EAAO,CAAChC,QAASgC,EAAGhC,QAASP,OAAQuC,EAAGvC,OAAQQ,OAAQ+B,EAAG/B,QAAa+B,EAAGpC,GACxF,IAER,GACwC,CAAE4B,eAAAA,EAAAA,GAAgBE,YAAAA,EAAAA,IAA1D,CAAyEL,E","sources":["webpack://01-first-project/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.js","webpack://01-first-project/./src/components/Dialogs/Massage/Massage.module.css?1ce0","components/Dialogs/Massage/MyMassage/MyMassage.js","components/Dialogs/Massage/HisMassage/HisMassage.js","components/Dialogs/Massage/Massage.js","webpack://01-first-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__7qCaN\",\"active\":\"Dialog_active__MMn43\",\"dialogsItems\":\"Dialog_dialogsItems__-7fXm\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Dialog.module.css'\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div>\r\n                <img src={props.avatar} alt=\"\" />\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink to={'/dialogs/' + props.id} className={linkActive => linkActive.isActive ? s.active : s.dialogsItems}>\r\n                    {props.name}\r\n                </NavLink>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"styleHis\":\"Massage_styleHis__DLc9G\",\"styleMy\":\"Massage_styleMy__8LfAn\"};","import React from 'react';\r\n\r\nconst MyMassage = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={props.avatar} alt=\"\" />\r\n            {props.massage}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyMassage;\r\n","import React from 'react';\r\n\r\nconst HisMassage = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            {props.massage}\r\n            <img src={props.avatar} alt=\"\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HisMassage;\r\n","import React from 'react';\r\nimport s from './Massage.module.css'\r\nimport MyMassage from './MyMassage/MyMassage';\r\nimport HisMassage from './HisMassage/HisMassage';\r\n\r\n\r\nconst Massage = (props) => {\r\n    \r\n    return (\r\n        <div className='s.massage'>\r\n            <div className={props.idUser===1?s.styleMy:s.styleHis}>\r\n                {props.idUser===1?<MyMassage massage={props.massage}  avatar={props.avatar}/>:<HisMassage massage={props.massage} avatar={props.avatar}/>}\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Massage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__YbpiY\",\"active\":\"Dialogs_active__b5gWE\",\"dialogsItems\":\"Dialogs_dialogsItems__ntZzj\",\"massages\":\"Dialogs_massages__dB6Xo\"};","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport { Field } from 'redux-form';\r\nimport { TextArea } from '../common/FromControls/FromControls';\r\nimport { maxLength, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength50=maxLength(50)\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {props.dialog}\r\n            </div>\r\n\r\n            <div className={s.massages}>\r\n\r\n                {props.massage}\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <Field\r\n                        validate={[required, maxLength50]}\r\n                        placeholder='Text'\r\n                        // cols=\"112\"\r\n                        // rows=\"3\"\r\n                        cols={20}\r\n                        rows={1}\r\n                        name={'massageText'}\r\n                        component={TextArea}\r\n                    />\r\n                    <button>Send</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { sendMassage, setMassageText } from '../../redux/dialogReducer';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Massage from './Massage/Massage';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { reduxForm } from 'redux-form';\r\n\r\n\r\nconst PostsReduxForm = reduxForm({ form: 'massageText' })(Dialogs)\r\n\r\nconst NavigateToSingInOrDialogs=withAuthNavigate(PostsReduxForm)\r\n\r\nconst DialogsContainer = React.memo((props) => {\r\n    \r\n    const onSubmit = (formData) => {\r\n        props.setMassageText(formData.massageText)\r\n        props.sendMassage()\r\n    }\r\n    return (\r\n        <div>\r\n            <NavigateToSingInOrDialogs onSubmit={onSubmit} {...props} />\r\n        </div>\r\n    );\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialog: state.dialogsPage.dialogData.map(el => {\r\n            return (<Dialog name={el.name} id={el.id} key={el.id} avatar={el.avatar} />)\r\n        }),\r\n        massage: state.dialogsPage.massagesData.map(el => {\r\n            return (<Massage massage={el.massage} avatar={el.avatar} idUser={el.idUser} key={el.id} />)\r\n        }),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { setMassageText, sendMassage })(DialogsContainer)\r\n\r\n\r\n"],"names":["props","className","s","src","avatar","alt","to","id","linkActive","isActive","name","massage","idUser","maxLength50","maxLength","dialog","onSubmit","handleSubmit","Field","validate","required","placeholder","cols","rows","component","TextArea","PostsReduxForm","reduxForm","form","Dialogs","NavigateToSingInOrDialogs","withAuthNavigate","DialogsContainer","React","formData","setMassageText","massageText","sendMassage","connect","state","dialogsPage","dialogData","map","el","massagesData"],"sourceRoot":""}